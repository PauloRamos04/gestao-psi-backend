# Configuração para produção
spring.application.name=gestao-psi-backend

# Database PostgreSQL (Railway)
# Construindo URL JDBC a partir das variáveis do Railway
spring.datasource.url=jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}?sslmode=require
spring.datasource.username=${PGUSER}
spring.datasource.password=${PGPASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Configurações SSL para PostgreSQL
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JPA/Hibernate - criar schema automaticamente (temporário para resolver problemas)
# Opções: create | create-drop | update | validate | none
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Flyway DESABILITADO temporariamente - Hibernate gerencia schema
spring.flyway.enabled=false
spring.flyway.baseline-on-migrate=false
spring.flyway.validate-on-migrate=false
spring.flyway.clean-disabled=true
spring.flyway.clean-on-validation-error=false


# Server - Railway fornece a variável PORT automaticamente
server.port=${PORT:${SERVER_PORT:8081}}
server.servlet.context-path=/api
# Fazer bind em todas as interfaces (0.0.0.0), não só localhost
server.address=0.0.0.0

# JWT (obrigatório via variável de ambiente)
jwt.secret=${JWT_SECRET}
jwt.expiration=86400000

# CORS - Origens permitidas (configurável via variável de ambiente)
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://gestao-psi-blush.vercel.app}

# Swagger (desabilitado em produção por segurança)
springdoc.api-docs.enabled=false
springdoc.swagger-ui.enabled=false

# Logging - apenas ERROS no Railway
logging.level.root=ERROR
logging.level.com.gestaopsi.prd=ERROR
logging.level.org.springframework=ERROR
logging.level.org.springframework.security=ERROR
logging.level.org.springframework.web=ERROR
logging.level.org.springframework.boot=ERROR
logging.level.org.hibernate=ERROR
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.org.flywaydb=ERROR
logging.level.com.zaxxer.hikari=ERROR

# Configurações de segurança adicionais
server.error.include-stacktrace=never
server.error.include-message=never

# Actuator para health check
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.health.db.enabled=true
management.health.defaults.enabled=true

# Configurações de startup para evitar travamento
spring.jpa.defer-datasource-initialization=true
spring.jpa.open-in-view=false

# ========================================
# CONFIGURAÇÕES DE BACKUP AUTOMÁTICO
# ========================================

# Habilitar backup automático em produção
backup.enabled=${BACKUP_ENABLED:true}

# Diretório (Railway usa /app/backups)
backup.directory=${BACKUP_DIRECTORY:/app/backups}

# Cron para execução (padrão: todos os dias às 3h da manhã UTC)
backup.cron=${BACKUP_CRON:0 0 3 * * ?}

# Retenção de backups em dias
backup.retention.days=${BACKUP_RETENTION_DAYS:7}

